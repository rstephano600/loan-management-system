<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('loans', function (Blueprint $table) {
            $table->id();
            $table->integer('group_center_id')->nullable();
            $table->integer('group_id')->nullable();
            $table->integer('client_id')->nullable();
            $table->integer('loan_category_id')->nullable();
            $table->string('loan_number')->unique();

            // client requests
            $table->decimal('amount_requested', 15, 2)->default(0);
            $table->decimal('client_payable_frequency', 15, 2)->default(0);
            $table->enum('status', ['pending', 'approved', 'active', 'completed', 'defaulted', 'closed'])->default('pending');
            
            // approval and loans fees
            $table->decimal('amount_disbursed', 15, 2)->default(0);
            $table->decimal('membership_fee', 15, 2)->nullable()->default(0);
            $table->decimal('insurance_fee', 15, 2)->nullable()->default(0);
            $table->decimal('officer_visit_fee', 15, 2)->nullable()->default(0);
            $table->decimal('other_fee', 15, 2)->nullable()->default(0);
            $table->decimal('penalty_fee', 15, 2)->nullable()->default(0);
            $table->decimal('preclosure_fee', 15, 2)->nullable()->default(0);
            $table->decimal('total_fee', 15, 2)->virtualAs('membership_fee + insurance_fee + other_fee + penalty_fee + preclosure_fee');
            $table->decimal('interest_rate', 5, 2)->nullable()->default(20);
            $table->decimal('interest_amount', 15, 2)->nullable()->default(0);
            $table->enum('repayment_frequency', ['daily', 'weekly', 'bi_weekly', 'monthly', 'quarterly'])->default('daily');
            $table->integer('max_term_days')->nullable()->default(0);
            $table->integer('max_term_months')->nullable()->default(0);
            $table->integer('total_days_due')->nullable()->default(0);
            $table->decimal('principal_due')->nullable()->default(0);
            $table->decimal('interest_due', 15, 2)->nullable()->default(0);
            $table->decimal('total_due', 15, 2)->virtualAs('principal_due + interest_due');
            $table->decimal('repayable_amount', 15, 2)->virtualAs('amount_disbursed + interest_amount + total_fee');
            $table->date('disbursement_date')->nullable();

            // repayments
            $table->decimal('amount_paid', 15, 2)->nullable()->default(0);
            $table->decimal('preclosure_fee_paid', 15, 2)->nullable()->default(0);
            $table->decimal('penalty_fee_paid', 15, 2)->nullable()->default(0)->comment('Late payment or fines');
            $table->decimal('other_fee_paid', 15, 2)->nullable()->default(0);
            $table->decimal('total_amount_paid', 15, 2)->virtualAs('penalty_fee_paid + preclosure_fee_paid + amount_paid + other_fee_paid');

            // Date tracking and outstanding balance
            $table->decimal('outstanding_balance', 15, 2)->default(0);

            // loss and profit
            $table->decimal('profit_loss_amount', 15, 2)->virtualAs('total_amount_paid + membership_fee + insurance_fee - repayable_amount ');

            $table->timestamp('closed_at')->nullable();
            $table->string('closure_reason')->nullable();
            
            $table->string('currency')->nullable()->default('TZS');
            $table->integer('created_by');
            $table->integer('approved_by')->nullable();
            $table->integer('updated_by')->nullable();
            $table->boolean('is_active')->default(true);
            $table->boolean('is_new_client')->default(true);
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('loans');
    }
};



<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('repayment_schedules', function (Blueprint $table) {
            $table->id();
            $table->integer('loan_id');
            $table->integer('installment_number')->unique();
            $table->integer('due_day_number');
            $table->date('due_date');

            // Amounts Due (Amortization Plan)
            $table->decimal('principal_due', 15, 2)->nullable()->default(0);
            $table->decimal('interest_due', 15, 2)->nullable()->default(0);
            $table->decimal('fees_due', 15, 2)->nullable()->default(0);
            $table->decimal('total_due', 15, 2)->virtualAs('principal_due + interest_due + fees_due');

            // Allocated Paid Amounts (Captured via payment allocations)
            $table->decimal('principal_paid', 15, 2)->nullable()->default(0);
            $table->decimal('interest_paid', 15, 2)->nullable()->default(0);
            $table->decimal('fees_paid', 15, 2)->nullable()->default(0);
            $table->decimal('total_paid', 15, 2)->virtualAs('principal_paid + interest_paid + fees_paid');

            $table->enum('status', ['pending', 'paid', 'partial', 'overdue'])->default('pending');
            $table->enum('payment_method', ['bank_transfer', 'cash', 'cheque', 'mobile_money', 'direct_debit', 'card', 'other'])->default('cash');
            
            $table->boolean('is_start_date')->default(false);
            $table->boolean('is_end_date')->default(false);
            $table->integer('days_left')->default(0);

            $table->integer('created_by');
            $table->integer('updated_by')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('repayment_schedules');
    }
};
